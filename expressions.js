/* ВЫРАЖЕНИЕ И ОПЕРАТОРЫ. ПРЕОБРАЗОВАНИЕ ТИПОВ. */

//* Записать в коротком виде: */
// let a = a + 5;      ==>    let a + = 5;
// let b = b * 15;     ==>    let b *= 15;
// let c = c - 3;      ==>    let c -= 3;
// let d = d % 2;      ==>    let d %= 2;
// let k = a + k;      ==>    let k += a;
// let l = l * b;      ==>    let l *= b;
// let m = m * 3 * k;  ==>    let m *= 3 * k;


/* Возвести переменную в куб, используя краткую запись. */

function toCube(number, n) {
  return Math.pow(number, n);
}
// console.log(toCube(5, 3));

/* Если переменная равна “маленький”, присвоить ей значение “большой”, иначе “маленький”. Сделать тоже самое, используя тернарный оператор. */


function getSize(str) {
    if (str === 'маленький') {
     return str = 'большой';
    } else {
     return str = 'маленький';
    }
}

function getSize(str) {
  return (str === 'маленький') ? 'большой' : 'маленький';
}
// console.log(getSize('маленький'));


/* Записать условие, используя условный оператор if: если переменная меньше нуля: присвоить ей строку “меньше нуля” если переменная равна нулю: присвоить 1 если больше нуля: используя краткую запись, умножить переменную на 10 Сделать тоже самое, используя тернарный оператор. */

function checkNum(num) {
  if (num < 0) {
    return num = 'меньше нуля';
  } else if (num == 0) {
    return num = 1;
  } else {
   return num *= 10;
  }
}

function checkNum(num) {
  return (num < 0) ? num = 'меньше нуля' :
  (num == 0) ? num = 1 :
  num *= 10;
}
// console.log(checkNum(-1));


/* Используя конструктор switch, записать следующее условие: */
// if(a == 'котик') {
//   console.log('котик');
// } else if(a == 'собака') {
//   console.log('собака');
// } else if(a == 'хомячок') {
//   console.log('хомячок');
// } else {
//   console.log('неизвестное науке животное');
// }

const checkAnimals = (str) => {
    switch (str) {
      case 'котик':
        console.log('котик');
        break;
      case 'собака':
        console.log('собака');
        break;
      case 'хомячок': 
        console.log('хомячок');
        break;
      default:
        console.log('неизвестное науке животное');
    }
}
// console.log(checkAnimals('котик'));

/* Чему равен x в каждом из примеров, объясните почему: */

// let x = 0 || 'строка'; // строка, потому что оператор ИЛИ находит первое истинное значение 
// let x = 1 && 'строка'; // строка, потому что оператор И проверят все условия до конца и если нет ложного возвращает последний
// let x = null || 1; // 1, потому что оператор ИЛИ находит первое истинное значение 
// let x = null && 1; // null, потому что возвращается первое ложное 
// let x = 1 && null; // null, потому что возвращается первое ложное
// let x = null || 0 || 1; // 1, потому что оператор ИЛИ находит первое истинное значение 
// let x = null && 0 && 1; // null, потому что оператор И возвращается первое ложное 

/* Чему равен x в каждом из примеров, объясните почему: */

// let x = 1 + 2 + '3'; x = '33', после сложения 1 и 2, происходит конкатенация 
// let x = 1 + 2 - '1'; x = 2,  выполняются математические выражения
// let x = '1' + 2 - 1; x = 11 => '1' + 2 = '12' (выполняется конкатенация) '12' - 1 => 11
// let x = true + 1; x = 2  =>  true = 1
// let x = +'1' + 2; x = 3  =>  +'1'  преобразует в число 1
// let x = null + 2;  x = 2   => null = 0
// let x = undefined + 2; x = NaN   => при конкатенации с undefined возвращается NaN
// let x = true + undefined;  x = NaN  => при конкатенации с undefined возвращается NaN